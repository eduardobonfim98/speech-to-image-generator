# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TextFromAudio(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, audio_id: str=None, audio_content: str=None):  # noqa: E501
        """TextFromAudio - a model defined in Swagger

        :param audio_id: The audio_id of this TextFromAudio.  # noqa: E501
        :type audio_id: str
        :param audio_content: The audio_content of this TextFromAudio.  # noqa: E501
        :type audio_content: str
        """
        self.swagger_types = {
            'audio_id': str,
            'audio_content': str
        }

        self.attribute_map = {
            'audio_id': 'audioId',
            'audio_content': 'audioContent'
        }
        self._audio_id = audio_id
        self._audio_content = audio_content

    @classmethod
    def from_dict(cls, dikt) -> 'TextFromAudio':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TextFromAudio of this TextFromAudio.  # noqa: E501
        :rtype: TextFromAudio
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_id(self) -> str:
        """Gets the audio_id of this TextFromAudio.


        :return: The audio_id of this TextFromAudio.
        :rtype: str
        """
        return self._audio_id

    @audio_id.setter
    def audio_id(self, audio_id: str):
        """Sets the audio_id of this TextFromAudio.


        :param audio_id: The audio_id of this TextFromAudio.
        :type audio_id: str
        """

        self._audio_id = audio_id

    @property
    def audio_content(self) -> str:
        """Gets the audio_content of this TextFromAudio.


        :return: The audio_content of this TextFromAudio.
        :rtype: str
        """
        return self._audio_content

    @audio_content.setter
    def audio_content(self, audio_content: str):
        """Sets the audio_content of this TextFromAudio.


        :param audio_content: The audio_content of this TextFromAudio.
        :type audio_content: str
        """

        self._audio_content = audio_content
