# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.image import Image  # noqa: F401,E501
from swagger_server import util


class Images(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, images_array_id: str=None, image_array_content: List[Image]=None, images_progress: str=None):  # noqa: E501
        """Images - a model defined in Swagger

        :param images_array_id: The images_array_id of this Images.  # noqa: E501
        :type images_array_id: str
        :param image_array_content: The image_array_content of this Images.  # noqa: E501
        :type image_array_content: List[Image]
        :param images_progress: Progress of the denoise
        :type images_progress: str
        """
        self.swagger_types = {
            'images_array_id': str,
            'image_array_content': List[Image],
            'images_progress': str
        }

        self.attribute_map = {
            'images_array_id': 'imagesArrayId',
            'image_array_content': 'imageArrayContent',
            'images_progress': 'images_progress'
        }
        self._images_array_id = images_array_id
        self._image_array_content = image_array_content
        self._images_progress = images_progress

    @classmethod
    def from_dict(cls, dikt) -> 'Images':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Images of this Images.  # noqa: E501
        :rtype: Images
        """
        return util.deserialize_model(dikt, cls)

    @property
    def images_array_id(self) -> str:
        """Gets the images_array_id of this Images.


        :return: The images_array_id of this Images.
        :rtype: str
        """
        return self._images_array_id

    @images_array_id.setter
    def images_array_id(self, images_array_id: str):
        """Sets the images_array_id of this Images.


        :param images_array_id: The images_array_id of this Images.
        :type images_array_id: str
        """

        self._images_array_id = images_array_id

    @property
    def image_array_content(self) -> List[Image]:
        """Gets the image_array_content of this Images.


        :return: The image_array_content of this Images.
        :rtype: List[Image]
        """
        return self._image_array_content

    @image_array_content.setter
    def image_array_content(self, image_array_content: List[Image]):
        """Sets the image_array_content of this Images.


        :param image_array_content: The image_array_content of this Images.
        :type image_array_content: List[Image]
        """

        self._image_array_content = image_array_content

    @property
    def images_progress(self) -> str:
        """Gets the images_progress of this Images.


        :return: The images_progress of this Images.
        :rtype: List[Image]
        """
        return self._images_progress

    @images_progress.setter
    def images_progress(self, images_progress: str):
        """Sets the images_progress of this Images.

        :param images_progress: The images_progress of this Images.
        :type images_progress: str
        """

        self._images_progress = images_progress
